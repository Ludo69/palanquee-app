<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Plong√©es</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-white flex flex-col min-h-screen">

    <div class="container mx-auto p-4 flex-grow">
        <h1 class="text-2xl font-bold text-center mb-4">
            Plong√©e du <span id="selected-date" data-date="<%= date %>">
            <%= new Date(date).toLocaleDateString('fr-FR', { day: '2-digit', month: 'long', year: 'numeric' }) %>
            </span>
        </h1>

        <ul class="space-y-3" id="plongeesList">
            <% if (plongees && plongees.length > 0) { %>
                <% plongees.forEach(function(plongee) { %>
                    <li class="flex items-center justify-between bg-gray-800 p-3 rounded-lg shadow-md w-full max-w-3xl mx-auto cursor-pointer" 
                        data-id="<%= plongee.id %>">
                        
                        <span>Plong√©e <%= plongee.numero %> - 
                            <span class="site-name"><%= plongee.site || "Nom du site" %></span>
                        </span>
        
                        <button class="edit-btn bg-blue-500 text-white px-3 py-1 rounded">Site</button>
        
                        <a href="/parametres_palanquees?id=<%= plongee.id %>">
                            <img src="/icons/liste.png" alt="Param√®tres" class="w-6 h-6">
                        </a>
                    </li>
                <% }); %>
            <% } else { %>
                <p class="text-center text-gray-400">Aucune plong√©e √† afficher.</p>
            <% } %>
        </ul>
        

        <div class="mt-6 flex justify-center">
            <button id="ajouter-plongee" class="bg-green-500 text-white px-4 py-2 rounded-lg shadow-md" data-date="<%= date %>">Ajouter Plong√©e</button>
        </div>
    </div>

    <!-- Bottom Navigation -->
    <div class="fixed bottom-0 left-0 w-full bg-gray-800 bg-opacity-80 backdrop-blur-md shadow-lg flex justify-around py-3 rounded-t-2xl">
        <a href="/" class="text-gray-400 hover:text-blue-400 flex flex-col items-center">
            <i class="fas fa-home text-xl"></i>
            <span class="text-xs">üè† Accueil</span>
        </a>
        <a href="/gestion-plongeurs" class="text-gray-400 hover:text-green-400 flex flex-col items-center">
            <i class="fas fa-users text-xl"></i>
            <span class="text-xs">üë§ Plongeurs</span>
        </a>
        <a href="/gestion-sorties" class="text-gray-400 hover:text-yellow-400 flex flex-col items-center">
            <i class="far fa-calendar-alt text-xl"></i>
            <span class="text-xs">ü§ø Sorties</span>
        </a>
        <a href="/selection-sorties" class="text-gray-400 hover:text-orange-400 flex flex-col items-center">
            <i class="fas fa-mask text-xl"></i>
            <span class="text-xs">üìã Palanqu√©es</span>
        </a>
    </div>

    <script>
        async function chargerPlongees() {
            const pathSegments = window.location.pathname.split("/");
            const sortieId = pathSegments[2];
            const sortieDate = document.getElementById("selected-date").getAttribute("data-date");

            try {
                console.log("üîç ID de la sortie :", sortieId, "| Date :", sortieDate); // Debug

                const response = await fetch(`/api/plongees/${sortieId}/${sortieDate}`);

                if (!response.ok) {
                    throw new Error(`Erreur serveur (${response.status})`);
                }
                const plongees = await response.json();

                console.log("‚úÖ Plong√©es r√©cup√©r√©es :", plongees);

                // Mise √† jour de l'affichage
                const plongeesList = document.getElementById("plongeesList");
                plongeesList.innerHTML = ""; // Vide la liste

                if (plongees.length > 0) {
                    plongees.forEach(plongee => {
                        const li = document.createElement("li");
                        li.classList.add("flex", "items-center", "justify-between", "bg-gray-800", "p-3", "rounded-lg", "shadow-md", "w-full", "max-w-3xl", "mx-auto", "cursor-pointer");
                        li.setAttribute("data-id", plongee.id);

                        li.innerHTML = `
                            <span>Plong√©e ${plongee.numero} - 
                                <span class="site-name">${plongee.site || "Nom du site"}</span>
                            </span>

                            <button class="edit-btn bg-blue-500 text-white px-3 py-1 rounded">Site</button>

                            <a href="/parametres_palanquees?id=${plongee.id}">
                                <img src="/icons/liste.png" alt="Param√®tres" class="w-6 h-6">
                            </a>
                        `;

                        plongeesList.appendChild(li);
                    });
                } else {
                    plongeesList.innerHTML = `<p class="text-center text-gray-400">Aucune plong√©e √† afficher.</p>`;
                }

                // Ajout des gestionnaires d'√©v√©nements apr√®s avoir ajout√© les √©l√©ments √† la liste
                ajouterGestionnaireEvenements();
            } catch (error) {
                console.error("‚ùå Erreur lors du chargement des plong√©es :", error);
                alert("Erreur lors du chargement des plong√©es.");
            }
        }

        function ajouterGestionnaireEvenements() {
            // Gestion de la redirection quand on clique sur une ligne
            document.querySelectorAll("#plongeesList li").forEach(item => {
                item.addEventListener("click", function (e) {
                    if (e.target.tagName === "INPUT" || e.target.classList.contains("edit-btn")) {
                        e.stopPropagation(); // Emp√™che la navigation
                        return;
                    }
                    const plongeeId = this.getAttribute("data-id");
                    window.location.href = `/gestion_palanquees?id=${plongeeId}`;
                });
            });

            // Gestion du bouton "Site"
            document.querySelectorAll(".edit-btn").forEach(button => {
                button.addEventListener("click", function (e) {
                    e.stopPropagation(); // Emp√™che la navigation
                    const li = this.closest("li");
                    const siteNameSpan = li.querySelector(".site-name");
                    const currentSiteName = siteNameSpan.textContent;

                    // Remplacer le texte par un formulaire
                    siteNameSpan.innerHTML = `
                        <input type="text" value="${currentSiteName}" class="site-input bg-gray-700 text-white p-1 rounded"/>
                        <button class="save-btn bg-green-500 text-white px-2 py-1 rounded ml-2">Valider</button>
                    `;

                    // Gestion du bouton "Valider"
                    li.querySelector(".save-btn").addEventListener("click", async function (e) {
                        e.preventDefault(); // Emp√™che la redirection par d√©faut
                        e.stopPropagation(); // Emp√™che la propagation de l'√©v√©nement
                        const newSiteName = li.querySelector(".site-input").value;
                        const plongeeId = li.getAttribute("data-id");

                        try {
                            const response = await fetch("/api/update-site", {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify({ plongeeId: plongeeId, site: newSiteName })
                            });

                            if (!response.ok) {
                                throw new Error(`Erreur serveur (${response.status})`);
                            }

                            const data = await response.json();
                            console.log("‚úÖ Site mis √† jour :", data);
                            siteNameSpan.textContent = newSiteName; // Mettre √† jour le texte avec le nouveau nom du site
                        } catch (error) {
                            console.error("‚ùå Erreur lors de la mise √† jour du site :", error);
                            alert("Erreur lors de la mise √† jour du site");
                        }
                    });
                });
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            // üî• Extraire `sortie_id` depuis l'URL
            const pathSegments = window.location.pathname.split("/"); // Divise l'URL en segments
            const sortieId = pathSegments[2]; // R√©cup√®re le deuxi√®me √©l√©ment apr√®s `/plongees/`
            const sortieDate = document.getElementById("selected-date").getAttribute("data-date");
    
            console.log("üîπ sortie_id d√©tect√© :", sortieId);
    
            if (!sortieId || sortieId.length !== 36) {
                console.error("‚ùå Erreur : sortie_id invalide !");
                alert("Erreur : Aucun ID de sortie valide trouv√©.");
                return;
            }
    
            // R√©cup√©rer le bouton "Ajouter Plong√©e"
            const ajouterPlongeeBtn = document.getElementById("ajouter-plongee");
    
            if (ajouterPlongeeBtn) {
                ajouterPlongeeBtn.addEventListener("click", async () => {
                    console.log("üü¢ Bouton Ajouter Plong√©e cliqu√© !");
    
                    try {
                        const response = await fetch("/api/ajouter-plongee", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                sortie_id: sortieId, // üü¢ UUID d√©tect√© depuis l'URL
                                date: sortieDate // Date de la sortie pr√©vue
                            })
                        });
    
                        if (!response.ok) {
                            throw new Error(`Erreur serveur (${response.status})`);
                        }
    
                        const data = await response.json();
                        console.log("‚úÖ R√©ponse serveur :", data);
                        chargerPlongees(); // Recharge uniquement la liste des plong√©es
                    } catch (error) {
                        console.error("‚ùå Erreur lors de l'ajout :", error);
                        alert("Erreur lors de l'ajout de la plong√©e");
                    }
                });
            } else {
                console.error("‚ö†Ô∏è Bouton Ajouter Plong√©e non trouv√© !");
            }
        });

        // Charger les plong√©es et ajouter les gestionnaires d'√©v√©nements
        chargerPlongees();
    </script>
    <!-- IndexedDB and App Scripts -->
    <script src="/js/indexeddb.js"></script>
    <script src="/js/client.js"></script>
</body>
</html>
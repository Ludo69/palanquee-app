<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Gestion des Plongeurs</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="/icons/favicon.ico">
</head>
<body class="bg-gray-900 text-white flex flex-col items-center min-h-screen">
        <!-- Bouton de retour en haut √† gauche -->
        <button onclick="window.history.back()" class="absolute top-4 left-4 text-white hover:text-gray-300 text-2xl">
            ‚Üê
        </button>

    <div class="w-full max-w-md p-6 text-center flex flex-col flex-grow">
        <h1 class="text-3xl font-bold mb-4">Gestion des Plongeurs</h1>

        <!-- Formulaire d'ajout de plongeur -->
        <form action="/ajouter-plongeur" method="POST" class="bg-gray-800 p-4 rounded-lg shadow-md space-y-4">
            <input type="text" id="nom" name="nom" placeholder="Nom du plongeur" required class="w-full p-2 bg-gray-700 text-white rounded-md border border-gray-600 focus:outline-none">
            <div class="grid grid-cols-4 gap-2">
                <% ["N1", "N2", "N3", "GP", "E2", "E3", "E4"].forEach(niveau => { %>
                    <button type="button" class="niveau-btn-create bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition" data-value="<%= niveau %>"><%= niveau %></button>
                <% }) %>
            </div>
            <input type="hidden" id="niveau-create" name="niveau" value="">
            <button type="submit" class="w-full bg-green-500 hover:bg-green-600 text-white py-2 rounded-md transition">Ajouter Plongeur</button>
        </form>

         <h2 class="text-xl font-semibold mt-6 mb-2">Liste des Plongeurs</h2>
        
        <!-- Liste des plongeurs scrollable -->
        <div class="overflow-y-auto max-h-80 w-full p-2 space-y-2 no-scrollbar">
            <% plongeurs.forEach(plongeur => { %>
                <div class="bg-[rgba(42,68,102,1)] p-3 rounded-lg flex justify-between items-center shadow-md">
                    <span><%= plongeur.nom %> - <%= plongeur.niveau %></span>
                    <div class="space-x-2">
                        <button class="text-yellow-400 hover:text-yellow-300" onclick="openEditPopup('<%= plongeur.id %>', '<%= plongeur.niveau %>')">‚úèÔ∏è</button>

                        <button class="text-red-500 hover:text-red-400" onclick="deletePlongeur('<%= plongeur.id %>')">‚ùå</button>
                    </div>
                </div>
            <% }) %>
        </div>
    </div>

    <!-- Bottom Navigation -->
    <div class="fixed bottom-0 left-0 w-full bg-gray-800 bg-opacity-80 backdrop-blur-md shadow-lg flex justify-around py-3 rounded-t-2xl">
        <a href="/" class="text-gray-400 hover:text-blue-400 flex flex-col items-center">
            <i class="fas fa-home text-xl"></i>
            <span class="text-xs">üè† Accueil</span>
        </a>
        <a href="/gestion-plongeurs" class="text-gray-400 hover:text-green-400 flex flex-col items-center">
            <i class="fas fa-users text-xl"></i>
            <span class="text-xs">üë§ Plongeurs</span>
        </a>
        <a href="/gestion-sorties" class="text-gray-400 hover:text-yellow-400 flex flex-col items-center">
            <i class="far fa-calendar-alt text-xl"></i>
            <span class="text-xs">ü§ø Sorties</span>
        </a>
        <a href="/selection-sorties" class="text-gray-400 hover:text-orange-400 flex flex-col items-center">
            <i class="fas fa-mask text-xl"></i>
            <span class="text-xs">üìã Palanqu√©es</span>
        </a>
    </div>

    <script>
        // S√©lectionner tous les boutons de niveau pour la cr√©ation
        const niveauButtonsCreate = document.querySelectorAll('.niveau-btn-create');

        niveauButtonsCreate.forEach(button => {
            button.addEventListener('click', function() {
                // R√©initialiser la classe "bg-green-500" pour tous les boutons
                niveauButtonsCreate.forEach(btn => btn.classList.remove('bg-green-500'));

                // Ajouter la classe "bg-green-500" au bouton cliqu√©
                button.classList.add('bg-green-500');

                // Mettre √† jour l'input cach√© avec la valeur du niveau s√©lectionn√©
                document.getElementById('niveau-create').value = button.dataset.value;
            });
        });
        // S√©lectionner tous les boutons de niveau
        // Lors de l'ajout d'un plongeur, on ne doit pas d√©clencher imm√©diatement une requ√™te, juste mettre √† jour l'input cach√©.
        const niveauButtons = document.querySelectorAll('.niveau-btn');

        niveauButtons.forEach(button => {
            button.addEventListener('click', function() {
                // R√©initialiser la classe "bg-green-500" pour tous les boutons
                niveauButtons.forEach(btn => btn.classList.remove('bg-green-500'));
                
                // Ajouter la classe "bg-green-500" au bouton cliqu√©
                button.classList.add('bg-green-500');
                
                // Mettre √† jour l'input cach√© avec la valeur du niveau s√©lectionn√©
                document.getElementById('niveau').value = button.dataset.value;
            });
        });

    
       // Fonction pour ouvrir la popup d'√©dition
        function openEditPopup(plongeurId, currentNiveau) {
            // Mettre l'ID du plongeur et le niveau actuel dans les champs cach√©s du formulaire
            document.getElementById('edit-plongeur-id').value = plongeurId;
            document.getElementById('edit-niveau').value = currentNiveau;

            // Mettre √† jour les boutons de niveau pour indiquer le niveau actuel
            document.querySelectorAll('.niveau-btn').forEach(button => {
                if (button.getAttribute('data-value') === currentNiveau) {
                    button.classList.add('bg-green-500', 'text-white');
                } else {
                    button.classList.remove('bg-green-500', 'text-white');
                }
            });

            // Afficher la popup
            document.getElementById('edit-popup').classList.remove('hidden');
        }
    
        // Fonction pour fermer la popup
        function closePopup() {
            document.getElementById('edit-popup').classList.add('hidden');
        }
    
        // S√©lectionner tous les boutons de niveau dans la popup et ajouter un √©v√©nement de clic pour enregistrer automatiquement
        document.querySelectorAll('.niveau-btn').forEach(button => {
            button.addEventListener('click', function() {
                // Mettre √† jour la valeur cach√©e du niveau
                const niveau = this.getAttribute('data-value');
                document.getElementById('edit-niveau').value = niveau;
    
                // Ajouter la classe de s√©lection (couleur verte) pour le bouton cliqu√©
                document.querySelectorAll('.niveau-btn').forEach(btn => btn.classList.remove('bg-green-500', 'text-white'));
                this.classList.add('bg-green-500', 'text-white');
    
                // Effectuer la requ√™te pour mettre √† jour le niveau du plongeur imm√©diatement
                const plongeurId = document.getElementById('edit-plongeur-id').value;
    
                fetch(`/modifier-plongeur/${plongeurId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ niveau: niveau })
                })
                .then(response => {
                    if (response.ok) {
                        location.reload(); // Recharger la page pour afficher les changements
                    } else {
                        alert("Erreur lors de la modification");
                    }
                })
                .catch(error => console.error("‚ùå Erreur :", error));
    
                // Fermer la popup apr√®s l'enregistrement
                closePopup();
            });
        });
    
        function deletePlongeur(id) {
            if (confirm("Voulez-vous vraiment supprimer ce plongeur ?")) {
                fetch(`/supprimer-plongeur/${id}`, { method: "DELETE" })
                .then(response => response.ok ? location.reload() : alert("Erreur lors de la suppression"))
                .catch(error => console.error("‚ùå Erreur :", error));
            }
        }
    </script>
    

    <style>
        /* Cache la barre de d√©filement mais permet de scroller */
        .no-scrollbar::-webkit-scrollbar {
            display: none;
        }
        .no-scrollbar {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
    </style>
    <!-- IndexedDB and App Scripts -->
    <!--<script src="/js/indexeddb.js"></script>
    <script src="/js/client.js"></script>-->
    <!-- Popup d'√©dition du niveau -->
<<div id="edit-popup" class="hidden fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50">
    <div class="bg-gray-800 p-6 rounded-lg shadow-md w-80">
        <h2 class="text-2xl text-white mb-4">Modifier le niveau du plongeur</h2>
        <form id="edit-form" method="POST">
            <input type="hidden" id="edit-plongeur-id" name="plongeur-id">
            <input type="hidden" id="edit-niveau" name="niveau">

            <!-- Choix du niveau -->
            <div class="grid grid-cols-4 gap-2 mb-4">
                <% ["N1", "N2", "N3", "GP", "E2", "E3", "E4"].forEach(niveau => { %>
                    <button type="button" class="niveau-btn bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 transition" data-value="<%= niveau %>"><%= niveau %></button>
                <% }) %>
            </div>

        </form>
        <button onclick="closePopup()" class="mt-4 text-red-500 hover:text-red-400">Fermer</button>
    </div>
</div>

<script>
    // Fonction pour ouvrir la popup d'√©dition
function openEditPopup(plongeurId, currentNiveau) {
    // Mettre l'ID du plongeur et le niveau actuel dans les champs cach√©s du formulaire
    document.getElementById('edit-plongeur-id').value = plongeurId;
    document.getElementById('edit-niveau').value = currentNiveau;

    // Mettre √† jour les boutons de niveau pour indiquer le niveau actuel
    // Lors de la modification, on met √† jour imm√©diatement le niveau et effectue une requ√™te pour l'enregistrer.
    document.querySelectorAll('.niveau-btn').forEach(button => {
        button.addEventListener('click', function() {
            // Mettre √† jour la valeur cach√©e du niveau
            const niveau = this.getAttribute('data-value');
            document.getElementById('edit-niveau').value = niveau;

            // Ajouter la classe de s√©lection (couleur verte) pour le bouton cliqu√©
            document.querySelectorAll('.niveau-btn').forEach(btn => btn.classList.remove('bg-green-500', 'text-white'));
            this.classList.add('bg-green-500', 'text-white');

            // Effectuer la requ√™te pour mettre √† jour le niveau du plongeur imm√©diatement
            const plongeurId = document.getElementById('edit-plongeur-id').value;

            fetch(`/modifier-plongeur/${plongeurId}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ niveau: niveau })
            })
            .then(response => {
                if (response.ok) {
                    location.reload(); // Recharger la page pour afficher les changements
                } else {
                    alert("Erreur lors de la modification");
                }
            })
            .catch(error => console.error("‚ùå Erreur :", error));

            // Fermer la popup apr√®s l'enregistrement
            closePopup();
        });
    });


    // Afficher la popup
    document.getElementById('edit-popup').classList.remove('hidden');
}

// Fonction pour fermer la popup
function closePopup() {
    document.getElementById('edit-popup').classList.add('hidden');
}

// S√©lectionner tous les boutons de niveau dans la popup et ajouter un √©v√©nement de clic pour enregistrer automatiquement
document.querySelectorAll('.niveau-btn').forEach(button => {
    button.addEventListener('click', function() {
        // Mettre √† jour la valeur cach√©e du niveau
        const niveau = this.getAttribute('data-value');
        document.getElementById('edit-niveau').value = niveau;

        // Ajouter la classe de s√©lection (couleur verte) pour le bouton cliqu√©
        document.querySelectorAll('.niveau-btn').forEach(btn => btn.classList.remove('bg-green-500', 'text-white'));
        this.classList.add('bg-green-500', 'text-white');

        // Effectuer la requ√™te pour mettre √† jour le niveau du plongeur imm√©diatement
        const plongeurId = document.getElementById('edit-plongeur-id').value;

        fetch(`/modifier-plongeur/${plongeurId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ niveau: niveau })
        })
        .then(response => {
            if (response.ok) {
                // Recharger la page pour afficher les changements
                location.reload();
            } else {
                alert("Erreur lors de la modification");
            }
        })
        .catch(error => console.error("‚ùå Erreur :", error));

        // Fermer la popup apr√®s l'enregistrement
        closePopup();
    });
});

function deletePlongeur(id) {
    if (confirm("Voulez-vous vraiment supprimer ce plongeur ?")) {
        fetch(`/supprimer-plongeur/${id}`, { method: "DELETE" })
        .then(response => response.ok ? location.reload() : alert("Erreur lors de la suppression"))
        .catch(error => console.error("‚ùå Erreur :", error));
    }
}

</script>


</body>
</html>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Gestion des Sorties | Palanquee Pro</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            light: '#5E9DFF',
                            DEFAULT: '#2A70E0',
                            dark: '#1A4A9C',
                        },
                        secondary: {
                            light: '#4FD1C5',
                            DEFAULT: '#38B2AC',
                            dark: '#2C7A7B',
                        },
                        accent: {
                            light: '#F6AD55',
                            DEFAULT: '#ED8936',
                            dark: '#DD6B20',
                        },
                        dark: {
                            light: '#2D3748',
                            DEFAULT: '#1A202C',
                            dark: '#171923',
                        }
                    },
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                    },
                }
            }
        }
    </script>

     <!-- Font Awesome -->
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Ton fichier CSS -->
    <link rel="stylesheet" href="/style.css">

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

</head>
<body class="bg-gradient-to-b from-dark-dark to-dark-light text-white font-sans min-h-screen pb-16 hidden">
    <div class="w-full max-w-3xl mx-auto p-4 sm:p-6 relative">
    <!-- Bouton de retour en haut à gauche -->
    <button onclick="window.history.back()" class="absolute top-4 left-4 text-gray-300 hover:text-white text-2xl z-10">
        <i class="fas fa-arrow-left"></i>
    </button>

    <!-- Titre -->
    <div class="text-center mb-8">
        <h1 class="text-2xl sm:text-3xl font-bold">
            <span class="text-transparent bg-clip-text bg-gradient-to-r from-primary-light to-secondary-light">Gestion</span>
            <span class="text-gray-300">des Sorties</span>
        </h1>
        <p class="text-gray-400 mt-2">Ajoutez et gérez vos sorties</p>
    </div>

    <div class="bg-dark-light rounded-2xl p-6 shadow-lg border border-gray-700 mb-8">    
        <!-- Formulaire d'ajout de sortie -->
        <form action="/ajouter-sortie" method="POST" class="bg-dark-light p-4 rounded-xl shadow-lg border border-gray-700 mb-6 sticky top-0 z-10">
            <input type="text" id="lieu" name="lieu" placeholder="Lieu de plongée" required 
                   class="w-full p-3 bg-dark border border-gray-600 rounded-lg mb-3 focus:ring-2 focus:ring-primary-light focus:border-transparent">
            
            <div class="grid grid-cols-2 gap-3 mb-4">
                <div>
                    <label for="date_debut" class="block text-sm text-gray-300 mb-1">Début</label>
                    <input type="date" id="date_debut" name="date_debut" required 
                           class="w-full p-2 bg-dark border border-gray-600 rounded-lg">
                </div>
                <div>
                    <label for="date_fin" class="block text-sm text-gray-300 mb-1">Fin</label>
                    <input type="date" id="date_fin" name="date_fin" required 
                           class="w-full p-2 bg-dark border border-gray-600 rounded-lg">
                </div>
            </div>
            <button type="submit"
                    class="w-full bg-gradient-to-r from-green-400 to-green-500 text-white py-3 rounded-lg font-medium opacity-50 cursor-not-allowed"
                    disabled
                    data-role-access="admin responsable"
                    data-role-loading>
                    <i class="fas fa-plus mr-2"></i> Ajouter Sortie
                </button>

        </form>
    
        <div class="bg-dark-light rounded-2xl shadow-lg border border-gray-700 overflow-hidden">
        <h2 class="text-xl font-semibold mb-3 text-gray-300">
            <i class="far fa-calendar-alt mr-2"></i> Sorties Planifiées
        </h2>
    
        <!-- Liste des sorties -->
        <div class="overflow-y-auto max-h-[calc(100vh-250px)] w-full space-y-3 no-scrollbar">
            <% sorties.sort((a, b) => new Date(a.date_debut) - new Date(b.date_debut)).forEach(sortie => { %>
                <div class="sortie bg-dark-light p-3 rounded-lg border border-gray-700 shadow-md">
                    <div class="flex justify-between items-center">
                        <div>
                            <h3 class="font-bold"><%= sortie.lieu %></h3>
                            <p class="text-sm text-gray-400">
                                <%= new Date(sortie.date_debut).toLocaleDateString('fr-FR', { month: '2-digit', year: 'numeric' }) %>
                                <% if (sortie.date_fin && sortie.date_fin !== sortie.date_debut) { %>
                                    → <%= new Date(sortie.date_fin).toLocaleDateString('fr-FR', { month: '2-digit', year: 'numeric' }) %>
                                <% } %>
                                <span class="text-gray-500 text-xs">(<%= sortie.plongeurs_count || 0 %> plongeurs)</span>
                            </p>
                        </div>
                        <div class="flex space-x-2">
                            <button class="btn-ajout-plongeur text-primary-light hover:text-primary-dark text-lg ajouter-plongeur hidden" 
                                data-id="<%= sortie.id %>" title="Ajouter des plongeurs"
                                data-role-access="admin responsable"
                                data-role-loading
                                data-role-action="hide">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn-ajout-plongeur text-red-500 hover:text-red-400 text-lg supprimer-sortie hidden" 
                                data-id="<%= sortie.id %>" title="Supprimer"
                                data-role-access="admin responsable"
                                data-role-loading
                                data-role-action="hide">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Section plongeurs (identique à votre version originale) -->
                    <div id="plongeurs-section-<%= sortie.id %>" style="display: none;"></div>
                </div>
            <% }) %>
        </div>
    
        <!-- Liste des plongeurs (identique à votre version originale) -->
        <div id="plongeurs-section" style="display: none;">
            <h2>Sélectionner les plongeurs</h2>
            <form action="/ajouter-plongeurs-a-sortie" method="POST">
                <input type="hidden" id="sortie_id_hidden" name="sortie_id">
                <div id="liste-plongeurs">
                    <% plongeurs.sort((a, b) => a.nom.localeCompare(b.nom)).forEach(plongeur => { %>
                        <label class="flex items-center space-x-2">
                            <input type="checkbox" name="plongeurs[]" value="<%= plongeur.id %>">
                            <span><%= plongeur.nom %></span>
                            <span class="checkmark" id="checkmark-<%= plongeur.id %>"></span>
                        </label>
                    <% }) %>
                </div>
                <button type="submit" class="add-button">Ajouter Plongeurs à la Sortie</button>
            </form>
        </div>
    </div>
</div>
</div>
    <!-- Bottom Navigation -->
    <nav class="fixed bottom-0 left-0 w-full bg-dark-light bg-opacity-90 backdrop-blur-md shadow-lg flex justify-around py-3 rounded-t-2xl border-t border-gray-700 z-40">
        <a href="/" class="nav-item text-gray-400 flex flex-col items-center">
            <i class="fas fa-home text-lg"></i>
            <span class="text-xs mt-1">Accueil</span>
        </a>
        <a href="/gestion-plongeurs" class="nav-item text-gray-400 flex flex-col items-center">
            <i class="fas fa-user-group text-lg"></i>
            <span class="text-xs mt-1">Plongeurs</span>
        </a>
        <a href="/gestion-sorties" class="nav-item active text-primary-light flex flex-col items-center">
            <i class="far fa-calendar-alt text-lg"></i>
            <span class="text-xs mt-1">Sorties</span>
        </a>
        <a href="/selection-sorties" class="nav-item text-gray-400 flex flex-col items-center">
            <i class="fas fa-layer-group text-lg"></i>
            <span class="text-xs mt-1">Palanquées</span>
        </a>
    </nav>

    <!-- JavaScript ORIGINAL (sans aucune modification) -->
    <script>
        let currentSortieId = null;
        const plongeurs = <%- JSON.stringify(plongeurs) %>;
        console.log("Plongeurs chargés :", plongeurs);
    
        document.querySelectorAll(".ajouter-plongeur").forEach((button) => {
            button.addEventListener("click", async function (event) {
                event.preventDefault();
                const sortieId = this.dataset.id;
                console.log(`Bouton "+" cliqué pour la sortie ID: ${sortieId}`);

                let sortieDiv = this.closest(".sortie");
                if (!sortieDiv) {
                    console.error("Erreur : Impossible de trouver la sortie correspondante !");
                    return;
                }

                // Vérifier si la section existe déjà et est visible
                let existingSection = document.getElementById(`plongeurs-section-${sortieId}`);
                if (existingSection && existingSection.style.display !== "none") {
                    existingSection.style.display = "none";
                    return;
                }

                // Masquer toutes les autres sections
                document.querySelectorAll('[id^="plongeurs-section-"]').forEach((section) => {
                    section.style.display = "none";
                });

                // Créer ou réutiliser la section
                if (!existingSection) {
                    existingSection = document.createElement('div');
                    existingSection.id = `plongeurs-section-${sortieId}`;
                    existingSection.className = 'plongeurs-section bg-gray-900 p-4 mt-2 rounded-lg shadow-md';
                    existingSection.style.display = "block"; // Rendre visible immédiatement
                    existingSection.innerHTML = '<p class="text-gray-400">Chargement en cours...</p>';
                    sortieDiv.insertAdjacentElement("afterend", existingSection);
                } else {
                    existingSection.style.display = "block"; // Rendre visible
                    existingSection.innerHTML = '<p class="text-gray-400">Chargement en cours...</p>';
                }

                try {
                    const response = await fetch(`/get-plongeurs-sortie/${sortieId}`);
                    if (!response.ok) throw new Error("Erreur réseau");
                    const plongeursAssocies = await response.json();
                    const plongeursAssociesArray = Array.isArray(plongeursAssocies.plongeurs_associes) ? plongeursAssocies.plongeurs_associes : [];

                    let plongeursHTML = `
                        <h2 class="text-xl font-bold text-white mb-2">Sélectionner les plongeurs</h2>
                        <form action="/ajouter-plongeurs-a-sortie" method="POST">
                            <input type="hidden" name="sortie_id" value="${sortieId}">`;

                    plongeurs.forEach((plongeur) => {
                        const isChecked = plongeursAssociesArray.includes(plongeur.id);
                        plongeursHTML += `
                            <div class="flex justify-between items-center bg-gray-800 p-2 rounded-md mb-2">
                                <label class="text-white flex items-center space-x-2">
                                    <input type="checkbox" name="plongeurs[]" value="${plongeur.id}" 
                                        class="form-checkbox text-blue-500" ${isChecked ? 'checked' : ''}>
                                    <span>${plongeur.nom}</span>
                                </label>
                                ${isChecked ? `
                                <button type="button" class="remove-plongeur text-red-500 hover:text-red-400"
                                        data-plongeur-id="${plongeur.id}" data-sortie-id="${sortieId}">
                                    <i class="fas fa-user-minus"></i>
                                </button>` : ''}
                            </div>`;
                    });

                    plongeursHTML += `
                            <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-md w-full mt-3">
                                Mettre à jour
                            </button>
                        </form>`;

                    existingSection.innerHTML = plongeursHTML;

                    // Gestion des boutons de suppression
                    document.querySelectorAll(".remove-plongeur").forEach((removeButton) => {
                        removeButton.addEventListener("click", async function (event) {
                            event.preventDefault();
                            const plongeurId = this.dataset.plongeurId;
                            try {
                                const response = await fetch(`/retirer-plongeur`, {
                                    method: "POST",
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify({ 
                                        plongeurId: plongeurId, 
                                        sortieId: sortieId 
                                    })
                                });
                                if (response.ok) {
                                    location.reload(); // Recharger pour voir les changements
                                }
                            } catch (error) {
                                console.error("Erreur:", error);
                            }
                        });
                    });

                } catch (error) {
                    console.error("Erreur:", error);
                    existingSection.innerHTML = '<p class="text-red-400">Erreur de chargement</p>';
                }
            });
        });

        async function refreshPlongeursList() {
            try {
                const response = await fetch(`/get-plongeurs-list`);
                const data = await response.json();
                if (response.ok) {
                    const plongeursListContainer = document.querySelector(".plongeurs-list");
                    plongeursListContainer.innerHTML = '';
                    data.plongeurs.forEach(plongeur => {
                        plongeursListContainer.innerHTML += `
                            <div class="plongeur-item">
                                <span>${plongeur.nom}</span>
                                <button class="remove-plongeur" data-plongeur-id="${plongeur.id}" data-sortie-id="${sortieId}">Retirer</button>
                            </div>`;
                    });
                }
            } catch (error) {
                console.error("Erreur:", error);
            }
        }

        document.querySelectorAll('.supprimer-sortie').forEach(button => {
            button.addEventListener('click', function () {
                const sortieId = this.dataset.id;
                if (confirm("Êtes-vous sûr de vouloir supprimer cette sortie ?")) {
                    fetch(`/supprimer-sortie/${sortieId}`, { method: 'DELETE' })
                        .then(response => {
                            if (response.ok) {
                                location.reload();
                            }
                        })
                        .catch(error => console.error("Erreur:", error));
                }
            });
        });
    </script>
        <script src="/js/auth.js"></script>
</body>
</html>
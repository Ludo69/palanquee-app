<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Palanqu√©es</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <div class="container">
        <h1 class="title">Gestion des Palanqu√©es</h1>

        <!-- Liste des palanqu√©es -->
        <div id="palanqueesContainer" class="palanquees-grid"></div>

        <!-- Liste des plongeurs -->
        <h2>Plongeurs Disponibles</h2>
        <div id="plongeursContainer" class="plongeurs-list scroll-horizontal">
                <% plongeurs.forEach(plongeur => { %>
                    <div class="plongeur badge <%= (plongeur.niveau === 'N1' || plongeur.niveau === 'N2' || plongeur.niveau === 'N3') ? 'niveau-vert' : 'niveau-bleu' %>"
                         data-id="<%= plongeur.id %>" draggable="true">
                        <%= plongeur.nom %> - <%= plongeur.niveau %>
                    </div>
                <% }) %>

        </div>

        <!-- Boutons -->
        <div class="buttons">
            <button id="ajouterPalanquee" class="add-button blue">+ Palanqu√©e</button>
            <button id="validerPalanquees" class="add-button green">‚úÖ Valider</button>
        </div>
    </div>

    <script>
        function getPlongeeIdFromURL() {
        const params = new URLSearchParams(window.location.search);
        return params.get("id");
        }

        const PLONGEE_ID = getPlongeeIdFromURL();

        if (!PLONGEE_ID) {
        console.error("‚ö†Ô∏è Aucun ID de plong√©e trouv√© dans l'URL !");
        }

        document.addEventListener("DOMContentLoaded", function () {
            const palanqueesContainer = document.getElementById("palanqueesContainer");
            const plongeursContainer = document.getElementById("plongeursContainer");
            const ajouterPalanqueeBtn = document.getElementById("ajouterPalanquee");

            const animauxMarins = ["Pieuvre", "Dauphin", "Requin", "Tortue", "M√©duse", "Raie", "Corail"];
            let palanquees = []; // Liste des palanqu√©es avec leurs plongeurs

            function genererNomPalanquee() {
                return animauxMarins[Math.floor(Math.random() * animauxMarins.length)];
            }

            // Ajouter une palanqu√©e sans effacer les autres
            ajouterPalanqueeBtn.addEventListener("click", function () {
                const id = Date.now();
                const nom = genererNomPalanquee();
                palanquees.push({ id, nom, plongeurs: [] });

                afficherPalanquee(id, nom);
            });

            function rendrePlongeursDraggables() {
                document.querySelectorAll(".plongeur").forEach(plongeur => {
                    plongeur.draggable = true;
                    plongeur.ondragstart = (event) => {
                        event.dataTransfer.setData("text/plain", plongeur.dataset.id);
                        setTimeout(() => plongeur.classList.add("hidden"), 0);
                    };
                    plongeur.ondragend = () => plongeur.classList.remove("hidden");
                });
            }
            rendrePlongeursDraggables();

            function afficherPalanquee(id, nom) {
                const div = document.createElement("div");
                div.classList.add("palanquee-card");
                div.dataset.id = id;
                div.innerHTML = `
                    <div class="palanquee-header">
                        <span>${nom}</span>
                        <button class="delete-palanquee">‚ùå</button>
                    </div>
                    <div class="palanquee-body" data-id="${id}"></div>
                `;

                const palanqueeBody = div.querySelector(".palanquee-body");

                // Restaurer les plongeurs d√©j√† assign√©s
                const palanquee = palanquees.find(p => p.id === id);
                if (palanquee) {
                    palanquee.plongeurs.forEach(plongeurId => {
                        const plongeur = document.querySelector(`[data-id='${plongeurId}']`);
                        if (plongeur) palanqueeBody.appendChild(plongeur);
                    });
                }

                div.querySelector(".delete-palanquee").addEventListener("click", function () {
                    while (palanqueeBody.firstChild) {
                        plongeursContainer.appendChild(palanqueeBody.firstChild);
                    }
                    palanquees = palanquees.filter(p => p.id !== id);
                    div.remove();
                    rendrePlongeursDraggables();
                });

                palanqueeBody.addEventListener("dragover", (event) => {
                    event.preventDefault();
                    event.dataTransfer.dropEffect = "move";
                });

                palanqueeBody.addEventListener("drop", (event) => {
                    event.preventDefault();
                    const plongeurId = event.dataTransfer.getData("text/plain");
                    const plongeur = document.querySelector(`[data-id='${plongeurId}']`);

                    if (plongeur) {
                        const isGuide = !["N1", "N2", "N3"].some(niveau => plongeur.textContent.includes(niveau));

                        if (isGuide) {
                            // Si c'est un guide (niveau autre que N1, N2, N3), on l'ajoute en haut
                            palanqueeBody.prepend(plongeur);
                        } else {
                            // Sinon, on l'ajoute normalement √† la fin
                            palanqueeBody.appendChild(plongeur);
                        }
                    }
                });


                palanqueesContainer.appendChild(div);
            }

            plongeursContainer.addEventListener("dragover", (event) => {
                event.preventDefault();
                event.dataTransfer.dropEffect = "move";
            });

            plongeursContainer.addEventListener("drop", (event) => {
                event.preventDefault();
                const plongeurId = event.dataTransfer.getData("text/plain");
                const plongeur = document.querySelector(`[data-id='${plongeurId}']`);
                if (plongeur) {
                    plongeursContainer.appendChild(plongeur);

                    // Supprimer le plongeur de la palanqu√©e o√π il √©tait
                    palanquees.forEach(palanquee => {
                        palanquee.plongeurs = palanquee.plongeurs.filter(id => id !== plongeurId);
                    });
                }
            });
        });

        document.getElementById("validerPalanquees").addEventListener("click", async () => {
    if (!PLONGEE_ID) {
        alert("Erreur : Impossible de r√©cup√©rer l'ID de la plong√©e !");
        return;
    }

    const palanqueesData = [];

    document.querySelectorAll(".palanquee-card").forEach(palanquee => {
        const id = palanquee.dataset.id;
        const nom = palanquee.querySelector(".palanquee-header span").textContent;
        const plongeurs = [...palanquee.querySelectorAll(".plongeur")].map(p => p.dataset.id);

        if (plongeurs.length > 0) {
            palanqueesData.push({ id, nom, plongeurs });
        }
    });

    if (palanqueesData.length === 0) {
        alert("Aucune palanqu√©e √† enregistrer !");
        return;
    }

    console.log("üì° Tentative d'enregistrement des palanqu√©es...");
    console.log("üì§ Donn√©es envoy√©es :", JSON.stringify({ plongee_id: PLONGEE_ID, palanquees: palanqueesData }, null, 2));

    try {
        const palanqueesDataFormatted = palanqueesData.map(palanquee => ({
            plongee_id: PLONGEE_ID,
            nom: palanquee.nom,
            profondeur: 0,  // Valeur par d√©faut
            duree: 0,       // Valeur par d√©faut (remplace si n√©cessaire)
            paliers: "", // Valeur par d√©faut (remplace si n√©cessaire)
            plongeurs: palanquee.plongeurs
        }));

        console.log("üì§ Donn√©es envoy√©es :", JSON.stringify(palanqueesDataFormatted, null, 2));

        const response = await fetch("/enregistrer_palanquee", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(palanqueesDataFormatted)
        });


        const result = await response.json();
        console.log("‚úÖ R√©ponse re√ßue :", result);

        if (response.ok) {
            alert("Palanqu√©es enregistr√©es avec succ√®s !");
            // üßπ Vider les palanqu√©es apr√®s enregistrement
            document.getElementById("palanqueesContainer").innerHTML = "";
            palanquees = []; // R√©initialiser la liste des palanqu√©es
        } else {
            alert("‚ùå Erreur : " + result.error);
        }
    } catch (error) {
        console.error("‚ùå Erreur lors de l'enregistrement :", error);
    }
});

    </script>
</body>
</html>
